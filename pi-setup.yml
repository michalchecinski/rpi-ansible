- hosts: raspberry
  become: 'yes'
  vars:
    - user_name: "pi"
    - user_password: ""
    - user_ssh_key: "{{ lookup('file', '/home/michal/.ssh/id_rsa.pub') }}"
    - ado_ssh_key: "{{ lookup('file', '/home/michal/.ssh/ado_access.pub') }}"
    - docker_version_armv6: 5:20.10.0~3-0~raspbian-buster
    - docker_version_armv7: 5:19.03.12~3-0~raspbian-buster
    - docker_version_arm64: 5:19.03.9~3-0~debian-buster
    # Check available versions on a Pi: `apt-cache madison docker-ce`
    - docker_version: "{{ docker_version_armv7 if 'armv7' in ansible_architecture else docker_version_armv6 if 'armv6' in ansible_architecture else docker_version_arm64 }}"
  tasks:
    - name: Change password for default user
      user:
        name: "{{ user_name }}"
        password: "{{ user_password | password_hash('sha512') }}"
        state: present

    - name: Add SSH public key
      authorized_key:
        user: "{{ user_name }}"
        key: "{{ user_ssh_key }}"

    - name: Add SSH public key
      authorized_key:
        user: "{{ user_name }}"
        key: "{{ ado_ssh_key }}"

    - name: Create a SSH key for user
      user:
        name: "{{ user_name }}"
        generate_ssh_key: yes
        ssh_key_file: .ssh/id_rsa

    - name: Create a SSH key for Azure DevOps
      user:
        name: "{{ user_name }}"
        generate_ssh_key: yes
        ssh_key_file: .ssh/ado_rsa

    - name: All done!
      debug:
        msg: Security has been successfully updated

    - name: Check if Docker is already present.
      command: which docker
      failed_when: false
      changed_when: false
      check_mode: false
      register: docker_command_result

    - name: Download Docker install convenience script.
      get_url:
          url: https://get.docker.com/
          dest: /tmp/get-docker.sh
          mode: 0775
      when: docker_command_result.rc == 1

    - name: Update repositories cache
      apt:
        update_cache: yes
      when: docker_command_result.rc == 1

    - name: Run Docker install convenience script.
      command: /tmp/get-docker.sh
      environment:
          CHANNEL: stable
      when: docker_command_result.rc == 1

    - name: Make sure Docker CE is the version specified.
      apt:
          name: "docker-ce={{ docker_version }}"
          state: present
          force: true
          install_recommends: false

    - name: Ensure Docker is started.
      service:
          name: docker
          state: started
          enabled: true

    - name: Ensure Pip is installed.
      package:
        name: python3-pip
        state: present

    - name: Install Docker Compose using Pip.
      pip:
          name: docker-compose
          state: present
          executable: pip3

    - name: Ensure docker users are added to the docker group.
      user:
          name: "{{ user_name }}"
          groups: docker
          append: true